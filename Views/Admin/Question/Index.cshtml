@{
  ViewData["Title"] = "Quản lý câu hỏi";
  Layout = "~/Views/Shared/_AdminLayout.cshtml";

  var accounts = ViewBag.Accounts;
}
<h2>Quản lý câu hỏi</h2>
<button class="btn btn-primary mb-3" onclick="openCreateModal()">Thêm câu hỏi</button>

<table class="table table-striped">
  <thead>
    <tr>
      <th>ID</th>
      <th>Nội dung câu hỏi</th>
      <th>Người hỏi (Email)</th>
      <th>Thời gian</th>
      <th>Thao tác</th>
    </tr>
  </thead>
  <tbody>
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr data-id="@item.Id">
                <td>@item.Id</td>
                <td>@item.Content</td>
                <td>@(item.Account != null ? item.Account.Email : "")</td>
                <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    <button class="btn btn-sm btn-warning" onclick="openEditModal(@item.Id)">Sửa</button>
                    <button class="btn btn-sm btn-danger" onclick="deleteQuestion(@item.Id)">Xóa</button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr><td colspan="5">Không có dữ liệu</td></tr>
    }
  </tbody>
</table>

<!-- Modal Thêm/Sửa -->
<div class="modal fade" id="questionModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalTitle">Thêm câu hỏi</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="questionForm" enctype="multipart/form-data">
          <input type="hidden" id="questionId" />
          
          <div class="mb-3">
            <label for="content" class="form-label">Nội dung câu hỏi <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="content" required />
          </div>
    
          <div class="mb-3">
            <label for="accountId" class="form-label">Người hỏi<span class="text-danger">*</span></label>
            <select id="accountId" class="form-control" required>
                <option value="">-- Chọn người hỏi --</option>
                @if (accounts != null)
                {
                    foreach (var s in accounts)
                    {
                        <option value="@s.Id">@s.Email</option>
                    }
                }
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
        <button type="button" class="btn btn-primary" onclick="saveQuestion()" id="btnSave">
          <span class="spinner-border spinner-border-sm d-none" id="loadingSpinner"></span>
          Lưu
        </button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    let currentModal;
    let isEditMode = false;
    
    document.addEventListener('DOMContentLoaded', function() {
        currentModal = new bootstrap.Modal(document.getElementById('questionModal'));
    });

    function openCreateModal() {
      isEditMode = false;
      document.getElementById('modalTitle').textContent = 'Thêm câu hỏi';
      document.getElementById('questionForm').reset();
      document.getElementById('questionId').value = '';
      currentModal.show();
    }

    function saveQuestion() {
        const form = document.getElementById('questionForm');
        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }
        
        // Show loading
        const btnSave = document.getElementById('btnSave');
        const spinner = document.getElementById('loadingSpinner');
        btnSave.disabled = true;
        spinner.classList.remove('d-none');
        
        const formData = new FormData();
        
        if (isEditMode) {
            formData.append('id', document.getElementById('questionId').value);
        }

        formData.append('content', document.getElementById('content').value);
        formData.append('accountId', document.getElementById('accountId').value);

        const url = isEditMode ? '/AdminQuestion/UpdateQuestion' : '/AdminQuestion/CreateQuestion';

        fetch(url, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(result => {
            btnSave.disabled = false;
            spinner.classList.add('d-none');
            
            if (result.success) {
                currentModal.hide();
                location.reload();
            } else {
                alert(result.message);
            }
        })
        .catch(error => {
            btnSave.disabled = false;
            spinner.classList.add('d-none');
            console.error('Error:', error);
            alert('Có lỗi xảy ra');
        });
    }

    function openEditModal(id) {
        isEditMode = true;
        document.getElementById('questionForm').reset();
        document.getElementById('questionId').value = '';
        currentModal.show();
        
        // Lấy thông tin document
        fetch(`/AdminQuestion/GetQuestion?id=${id}`)
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    const doc = result.data;
                    document.getElementById('questionId').value = doc.id;
                    document.getElementById('content').value = doc.content;
                    document.getElementById('accountId').value = doc.accountId;
                    
                    currentModal.show();
                } else {
                    alert(result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi tải dữ liệu');
            });
    }

    function deleteQuestion(id) {
      if (!confirm('Bạn có chắc chắn muốn xóa câu hỏi này? Câu hỏi sẽ bị xóa vĩnh viễn!')) {
          return;
      }
      
      fetch('/AdminQuestion/DeleteQuestion', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify(id)
      })
      .then(response => response.json())
      .then(result => {
          if (result.success) {
              alert(result.message);
              document.querySelector(`tr[data-id="${id}"]`).remove();
          } else {
              alert(result.message);
          }
      })
      .catch(error => {
          console.error('Error:', error);
          alert('Có lỗi xảy ra');
      });
  }
  </script>
}