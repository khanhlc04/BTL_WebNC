@model IEnumerable<BTL_WebNC.Models.Document.DocumentModel>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<style>
    /* Small UI polish */
    .card-hover:hover {
        transform: translateY(-6px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
    }

    .doc-thumb {
        height: 200px;
        background-color: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .doc-title {
        font-size: 0.95rem;
        font-weight: 600;
    }

    .subject-badge {
        position: absolute;
        top: 10px;
        left: 10px;
    }

    #documentListContainer.loading {
        opacity: 0.5;
        transition: opacity 0.3s;
    }
</style>

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">Tài liệu học tập</h4>

        <div class="input-group w-50">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
            <input type="text" id="searchInput" name="searchTerm" value="@ViewBag.SearchTerm" class="form-control"
                placeholder="Tìm kiếm tài liệu..." />
            <button type="button" id="clearSearch" class="btn btn-outline-secondary" title="Xóa">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 mb-3">
            <div class="accordion" id="subjectFilter">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingSubjects">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseSubjects">
                            <i class="bi bi-folder2-open me-2"></i> Lọc theo môn học
                        </button>
                    </h2>
                    <div id="collapseSubjects" class="accordion-collapse collapse" data-bs-parent="#subjectFilter">
                        <div class="accordion-body">
                            @if (ViewBag.Subjects != null)
                            {
                                @foreach (var subject in ViewBag.Subjects)
                                {
                                    var isChecked = ((List<int>)ViewBag.SelectedSubjects).Contains(subject.Id);
                                    <div class="form-check mb-2">
                                        <input type="checkbox" name="subjectIds" value="@subject.Id"
                                            class="form-check-input subject-checkbox" @(isChecked ? "checked" : "")
                                            id="sub-@subject.Id" />
                                        <label class="form-check-label" for="sub-@subject.Id">@subject.Name</label>
                                    </div>
                                }
                            }
                            <div class="mt-2 text-center">
                                <button type="button" id="clearFilters" class="btn btn-sm btn-outline-secondary">
                                    <i class="bi bi-x-circle me-1"></i> Xóa
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9">
            <div class="row" id="documentListContainer">
                @await Html.PartialAsync(partialViewName: "~/Views/Document/DocumentListPartial.cshtml", Model)
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="documentPreviewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Xem trước tài liệu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <iframe id="previewIframe" src="about:blank" style="width: 100%; height: 75vh; border: none;"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        // --- 1. Khai báo tất cả các biến ---
        const searchInput = document.getElementById("searchInput");
        const checkboxes = document.querySelectorAll(".subject-checkbox");
        const listContainer = document.getElementById("documentListContainer");
        const clearSearchBtn = document.getElementById('clearSearch');
        const clearFiltersBtn = document.getElementById('clearFilters');
        let debounceTimer;

        // URL để gọi AJAX (luôn cần)
        const filterUrl = "@Url.Action("FilterDocuments", "Document")";

        // --- 2. Logic Lọc (AJAX) (Luôn cần) ---
        function fetchDocuments() {
            if (listContainer) listContainer.classList.add('loading');
            const searchTerm = searchInput ? searchInput.value : '';
            const subjectIds = Array.from(checkboxes)
                .filter(cb => cb.checked)
                .map(cb => `subjectIds=${cb.value}`);

            let url = `${filterUrl}?searchTerm=${encodeURIComponent(searchTerm)}`;
            if (subjectIds.length > 0) {
                url += `&${subjectIds.join('&')}`;
            }

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    if (listContainer) {
                        listContainer.innerHTML = html;
                    }
                })
                .catch(error => {
                    console.error('Lỗi khi lọc tài liệu:', error);
                    if (listContainer) {
                        listContainer.innerHTML = '<p class="text-danger">Đã xảy ra lỗi khi tải dữ liệu.</p>';
                    }
                })
                .finally(() => {
                    if (listContainer) listContainer.classList.remove('loading');
                });
        }

        // Hàm Debounce (Luôn cần)
        function debounceFetch() {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(fetchDocuments, 350);
        }

        // --- 3. Gắn các sự kiện lọc (Luôn cần) ---
        if (searchInput) {
            searchInput.addEventListener("input", debounceFetch);
        }
        if (checkboxes && checkboxes.length) {
            checkboxes.forEach(cb => cb.addEventListener("change", fetchDocuments));
        }
        if (clearSearchBtn) {
            clearSearchBtn.addEventListener('click', function () {
                if (searchInput) searchInput.value = '';
                fetchDocuments();
            });
        }
        if (clearFiltersBtn) {
            clearFiltersBtn.addEventListener('click', function () {
                if (checkboxes && checkboxes.length) {
                    checkboxes.forEach(cb => cb.checked = false);
                }
                fetchDocuments();
            });
        }

        // --- 4. Logic Modal (Chỉ khi modal tồn tại) ---
        const previewModal = document.getElementById('documentPreviewModal');
        if (previewModal) {
            const iframe = document.getElementById('previewIframe');

            // Gắn sự kiện CHỈ cho modal
            previewModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const fileUrl = button.getAttribute('data-src');
                if (iframe) {
                    iframe.setAttribute('src', fileUrl);
                }
            });

            previewModal.addEventListener('hide.bs.modal', function () {
                if (iframe) {
                    iframe.setAttribute('src', 'about:blank'); // Rất quan trọng
                }
            });
        }
    })();
</script>